{"version":3,"sources":["Shared/Resume.pdf","Components/ResumeComponent.js","Components/SideNavbarComponent.js","Components/HomeComponent.js","Components/ProjectsComponent.js","Components/SkillsComponent.js","Components/ProfilesComponent.js","Components/NotFoundComponent.js","Components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Resume","resume","href","target","rel","SideNavbar","props","state","isNavOpen","toggleNav","bind","this","setState","Fragment","id","Navbar","expand","NavbarToggler","onClick","src","height","width","alt","Collapse","isOpen","navbar","Nav","NavItem","to","type","class","Component","Home","RenderProject","project","key","name","className","tech_stack","desciption","link_to_source_code","link_to_app","Projects","project_list","projects","map","RenderRow","list","element","Button","color","Skills","skills","skill_list","property","push","scope","Table","borderless","profile_link","Profiles","profiles","profile_list","NotFound","console","log","Main","require","path","component","App","hashType","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9c74b840.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Resume.c17db71a.pdf\";","import React from \"react\";\n\nfunction Resume({resume}) {\n    return (\n        <a href = {resume} target = \"_blank\" rel=\"noopener noreferrer\">Get Resume</a>\n    );\n}\n\nexport default Resume;\n","import React, { Component } from 'react';\nimport { Navbar, Nav, NavItem, NavbarToggler, Collapse } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport Resume from './ResumeComponent';\n\nclass SideNavbar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isNavOpen : false\n        };\n\n        this.toggleNav = this.toggleNav.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen : !(this.state.isNavOpen)\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment >\n                <h3 id=\"name\" > Utkal </h3>\n                <Navbar expand=\"md\">\n\n                    <NavbarToggler onClick={this.toggleNav} >\n                        <img src=\"/images/menu.svg\" height=\"30px\" width=\"40px\" alt=\"toggle menu\"/>\n                    </NavbarToggler>\n\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\n                        <Nav navbar>\n\n                            <NavItem>\n                                <NavLink to=\"/home\"> Home </NavLink>\n                            </NavItem>\n                            \n                            <NavItem>\n                                <NavLink to=\"/projects\"> Projects </NavLink>\n                            </NavItem>\n\n                            <NavItem>\n                                <NavLink to=\"/skills\"> Skills </NavLink>\n                            </NavItem>\n\n                            <NavItem>\n                                <NavLink to=\"/profiles\"> Profiles </NavLink>\n                            </NavItem>\n\n                            <button type=\"button\" class=\"btn btn-dark\" id=\"get-resume-button\">\n                                <Resume resume={this.props.resume}/>\n                            </button>\n\n                        </Nav>\n\n                    </Collapse>\n                </Navbar>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default SideNavbar;","import React from 'react';\n\nfunction Home(props) {\n\n    return (\n        <div id=\"home\">\n            <h1 >Hello</h1>\n            <p >\n                I am  a computer science graduate interested in Backend Development. \n                I am currently exploring Reactjs (This web site is built using react).\n                Most of the times, I use Nodejs, MongoDB and Expressjs for building APIs. \n                But I do not constrain to this and would change to other stack based on the project requirement.\n                As you can see, I am not very good at CSS. I am open for suggestions to improve the aesthetics.\n            </p>\n        </div>\n    );\n}\n\nexport default Home;","import React from \"react\";\n\nfunction RenderProject({project}) {\n    return (\n        <div key={project.name} className=\"card project-card col-sm-10\">\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">{project.name}</h5>\n                <h6 className=\"card-subtitle\">{project.tech_stack}</h6>\n                <p className=\"card-text\">{project.desciption}</p>\n\n                {\n                    project.link_to_source_code ? \n                    <a href={project.link_to_source_code} className=\"card-link\" >Link to Source Code</a> : null\n                }\n                \n                {\n                    project.link_to_app ? \n                    <a href={project.link_to_app} className=\"card-link\" >Link to Application</a> : null\n                }\n\n            </div>\n        </div>\n    );\n}\n\nfunction Projects({projects}) {\n\n    const project_list = projects.map((project) => {\n        return (\n            <div key={project.name} className=\"container\">\n                <RenderProject project={project} />\n            </div>\n        );\n    });\n\n    return (\n        <React.Fragment>\n            {project_list}\n        </React.Fragment>\n    );\n}\n\nexport default Projects;","import React from \"react\";\nimport { Table, Button } from 'reactstrap';\n\nfunction RenderRow({list}) {\n    \n    return list.map((element) => {\n        return(\n            <Button key={element} color=\"info ml-1\">{element}</Button>\n        );\n    });\n}\n\nfunction Skills({skills}) {\n\n    const skill_list = [];\n    for(let property in skills) {\n        skill_list.push(\n            <tr key={property}>\n                <th scope='row'>{property}</th>\n                <td>\n                    <RenderRow list={skills[property]} />\n                </td>\n            </tr>\n        );\n    }\n\n    return (\n        <Table borderless className=\"\">\n            <tbody>\n                {skill_list}\n            </tbody>\n        </Table>\n    );\n}\n\nexport default Skills;","import React from \"react\";\nimport { Table } from 'reactstrap';\n\n\nfunction RenderRow({profile_link}) {\n\n    return (\n        <React.Fragment>\n            <td> <a href={profile_link}>{profile_link}</a> </td>            \n        </React.Fragment>\n    );\n}\n\nfunction Profiles({profiles}) {\n\n    const profile_list = [];\n    for(let property in profiles) {\n        profile_list.push(\n            <tr key={property}>\n                <th scope='row'>{property}</th>\n                <RenderRow profile_link={profiles[property]} />\n            </tr>\n        );\n    }\n\n    return (\n        <div className=\"container\">\n            <Table borderless>\n                <tbody>\n                    {profile_list}\n                </tbody>\n            </Table>\n        </div>\n    );\n}\n\nexport default Profiles;","import React from 'react';\n\nfunction NotFound(props) {\n    console.log(\"Not found triggered.\");\n    return (\n        <div className=\"container\">\n            <img src=\"images/not_found.png\" alt=\"404 not found\" />\n            <p>\n                The page you have requested for is not present. Please go Home.\n            </p>\n        </div>\n    );\n}\n\nexport default NotFound;","import React, {Component} from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom';\n\nimport SideNavbar from './SideNavbarComponent';\nimport Home from './HomeComponent';\nimport Projects from './ProjectsComponent';\nimport Skills from './SkillsComponent';\nimport Profiles from './ProfilesComponent';\nimport NotFound from './NotFoundComponent';\n\nclass Main extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            projects : require('../Shared/projects.json'),\n            skills : require('../Shared/skills.json'),\n            profiles : require('../Shared/profiles.json'),\n            resume : require('../Shared/Resume.pdf')\n        };\n    }\n\n    render() {\n        const HomePage = () => {\n            return (\n                <Home />\n            );\n        };\n\n        return (\n            <div className=\"row\">\n\n                <aside className=\"sidenav\">\n                    <SideNavbar resume={this.state.resume} />\n                </aside>\n\n                <main id=\"main\" >\n                    <Switch >\n                        <Route path=\"/home\" component={HomePage} />\n                        <Route path=\"/projects\" component={() => <Projects projects={this.state.projects}/> } />\n                        <Route path=\"/skills\" component={() => <Skills skills={this.state.skills}/> } />\n                        <Route path=\"/profiles\" component={() => <Profiles profiles={this.state.profiles} />} />\n                        <Route path=\"/notfound\" component={NotFound} />\n                        <Redirect to=\"/home\" />\n                    </Switch>\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default Main;","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\n\nimport './App.css';\nimport Main from './Components/MainComponent';\n\nfunction App() {\n    return (\n        <HashRouter hashType=\"noslash\">\n            <div className=\"App container-fluid\">\n                <Main />\n            </div>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';  // First load bootstrap\nimport './index.css';                           // Then load custom css\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( <App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}