{"version":3,"sources":["Shared/Resume.pdf","Components/ResumeComponent.js","Components/SideNavbarComponent.js","Components/ProjectsComponent.js","Components/SkillsComponent.js","Components/EducationComponent.js","Components/POSComponent.js","Components/ProfilesComponent.js","Components/HomeComponent.js","Components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Resume","resume","className","href","target","rel","SideNavbar","props","state","isNavOpen","toggleNav","bind","this","setState","Navbar","Nav","navbar","NavItem","to","id","Component","RenderProject","project","key","name","tech_stack","desciption","link_to_source_code","Projects","project_list","projects","map","Fragment","RenderRow","list","element","Button","color","Skills","skills","skill_list","property","push","scope","Table","Education","education","level","institute","major","score","POS","pos","position","ListGroupItem","ListGroup","profile_link","Profiles","profiles","profile_list","Home","Main","require","path","component","filter","featured","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7f14a46e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Resume.5fcfed51.pdf\";","import React from \"react\";\n\nfunction Resume({resume}) {\n    return (\n        <div className=\"btn\">\n            <a href = {resume} target = \"_blank\" rel=\"noopener noreferrer\">Get Resume</a>\n        </div>\n    );\n}\n\nexport default Resume;\n","import React, {Component} from 'react';\nimport { Navbar, Nav, NavItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport Resume from './ResumeComponent';\n\nclass SideNavbar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isNavOpen : false\n        };\n\n        this.toggleNav = this.toggleNav.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen : !(this.state.isNavOpen)\n        });\n    }\n\n    render() {\n        return (\n            <Navbar >\n                <Nav navbar>\n\n                    <NavItem>\n                        <NavLink to=\"/home\"> Home </NavLink>\n                    </NavItem>\n                    \n                    <NavItem>\n                        <NavLink to=\"/projects\"> Projects </NavLink>\n                    </NavItem>\n\n                    <NavItem>\n                        <NavLink to=\"/education\"> Education </NavLink>\n                    </NavItem>\n\n                    <NavItem>\n                        <NavLink to=\"/skills\"> Skills </NavLink>\n                    </NavItem>\n\n                    <NavItem>\n                        <NavLink to=\"/POS\"> Positions of Responsibility </NavLink>\n                    </NavItem>\n\n                </Nav>\n                <button className=\"btn btn-primary\" id=\"get-resume-button\">\n                    <Resume resume={this.props.resume}/>\n                </button>\n            </Navbar>\n        );\n    }\n}\n\nexport default SideNavbar;","import React from \"react\";\n\nfunction RenderProject({project}) {\n    return (\n        <div key={project.name} className=\"card project-card col-sm-10\">\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">{project.name}</h5>\n                <h6 className=\"card-subtitle\">{project.tech_stack}</h6>\n                <p className=\"card-text\">{project.desciption}</p>\n                <a href={project.link_to_source_code} className=\"card-link\" >Link to Source Code</a>\n            </div>\n        </div>\n    );\n}\n\nfunction Projects({projects}) {\n\n    const project_list = projects.map((project) => {\n        return (\n            <div key={project.name} className=\"container\">\n                <RenderProject project={project} />\n            </div>\n        );\n    });\n\n    return (\n        <React.Fragment>\n            {project_list}\n        </React.Fragment>\n    );\n}\n\nexport default Projects;","import React from \"react\";\nimport { Table, Button } from 'reactstrap';\n\nfunction RenderRow({list}) {\n    \n    return list.map((element) => {\n        return(\n                <Button key={element} color=\"info ml-1\">{element}</Button>\n        );\n    });\n}\n\nfunction Skills({skills}) {\n\n    const skill_list = [];\n    for(let property in skills) {\n        skill_list.push(\n            <tr key={property}>\n                <th scope='row'>{property}</th>\n                <td>\n                    <RenderRow list={skills[property]} />\n                </td>\n            </tr>\n        );\n    }\n\n    return (\n        <div className=\"container\">\n            <Table>\n                <tbody>\n                    {skill_list}\n                </tbody>\n            </Table>\n        </div>\n    );\n}\n\nexport default Skills;","import React from 'react';\nimport { Table } from 'reactstrap';\n\nfunction Education({education}) {\n\n    const list = education.map((element) => {\n        return (\n            <tr key={element.level}>\n                <th scope={element.level}>{element.level}</th>\n                <td>{element.institute}</td>\n                <td>{element.major}</td>\n                <td>{element.score}</td>\n            </tr>\n        )\n    });\n\n    return (\n        <div className=\"card home-card\">\n            <Table>\n                <thead>\n                    <tr>\n                        <th>Level</th>\n                        <th>Insitution</th>\n                        <th>Major</th>\n                        <th>Score</th>\n                    </tr>\n                    {list}\n                </thead>\n            </Table>\n        </div>\n    );\n}\n\nexport default Education;","import React from 'react';\nimport { ListGroup, ListGroupItem } from 'reactstrap';\n\nfunction POS({pos}) {\n\n    const list = pos.map((position) => {\n        return (\n            <ListGroupItem key={position} >{position}</ListGroupItem>\n        );\n    });\n\n    return (\n        <div className=\"container\">\n            <ListGroup>\n                {list}\n            </ListGroup>\n        </div>\n    );\n}\n\nexport default POS;","import React from \"react\";\nimport { Table } from 'reactstrap';\n\n\nfunction RenderRow({profile_link}) {\n\n    return (\n        <React.Fragment>\n            <td> <a href={profile_link}>{profile_link}</a> </td>            \n        </React.Fragment>\n    );\n}\n\nfunction Profiles({profiles}) {\n\n    const profile_list = [];\n    for(let property in profiles) {\n        profile_list.push(\n            <tr key={property}>\n                <th scope='row'>{property}</th>\n                <RenderRow profile_link={profiles[property]} />\n            </tr>\n        );\n    }\n\n    return (\n        <div className=\"container\">\n            <Table>\n                <tbody>\n                    {profile_list}\n                </tbody>\n            </Table>\n        </div>\n    );\n}\n\nexport default Profiles;","import React from 'react';\n\nimport Projects from './ProjectsComponent';\nimport Skills from './SkillsComponent';\nimport Education from './EducationComponent';\nimport POS from './POSComponent';\nimport Profiles from './ProfilesComponent';\n\n\nfunction Home(props) {\n\n    return (\n        <React.Fragment>\n            \n            <div className=\"card home-card col-sm-10\">\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">Education</h5>\n                    <Education education={props.education} />\n                </div>\n            </div>\n\n            <div className=\"card home-card col-sm-10\">\n                <div className=\"card-body\">        \n                    <h5 className=\"card-title\">Projects</h5>            \n                    <Projects projects={props.projects} />\n                </div>\n            </div>\n            \n            <div className=\"card home-card col-sm-10\">\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">Skills</h5>\n                    <Skills skills={props.skills} />                        \n                </div>\n            </div>\n\n            <div className=\"card home-card col-sm-10\">\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">Profiles</h5>\n                    <Profiles profiles={props.profiles} />                    \n                </div>\n            </div>\n\n            <div className=\"card home-card col-sm-10\">\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">Positions of Responsibility</h5>\n                    <POS pos={props.pos} />\n                </div>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default Home;","import React, {Component} from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom';\n\nimport SideNavbar from './SideNavbarComponent';\nimport Home from './HomeComponent';\nimport Projects from './ProjectsComponent';\nimport Skills from './SkillsComponent';\nimport Education from './EducationComponent';\nimport POS from './POSComponent';\nimport Profiles from './ProfilesComponent';\n\nclass Main extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            projects : require('../Shared/projects.json'),\n            skills : require('../Shared/skills.json'),\n            pos : require('../Shared/positionsOfResponsibility.json'),\n            education : require('../Shared/education.json'),\n            profiles : require('../Shared/profiles.json'),\n            resume : require('../Shared/Resume.pdf')\n        };\n    }\n\n    render() {\n        const HomePage = () => {\n            return (\n                <Home\n                    projects = { this.state.projects.filter((project) => project.featured) }\n                    skills = { this.state.skills }\n                    pos = { this.state.pos }\n                    education = { this.state.education.filter((level) => level.featured)}\n                    profiles = { this.state.profiles }\n                    resume = { this.state.resume }\n                />\n            );\n        };\n\n        return (\n            <div className=\"row\">\n\n                    <div className=\"sidenav\">\n                        <SideNavbar resume={this.state.resume} />\n                    </div>\n\n                    <main id=\"main\" >\n                        <Switch >\n                            <Route path=\"/home\" component={HomePage} />\n                            <Route path=\"/projects\" component={() => <Projects projects={this.state.projects}/> } />\n                            <Route path=\"/skills\" component={() => <Skills skills={this.state.skills}/> } />\n                            <Route path=\"/education\" component={() => <Education education={this.state.education}/> } />\n                            <Route path=\"/POS\" component={() => <POS pos={this.state.pos}/> } />\n                            <Route path=\"/profiles\" component={() => <Profiles profiles={this.state.profiles} />} />\n                            <Redirect to=\"/home\" />\n                        </Switch>\n                    </main>\n            </div>\n        );\n    }\n}\n\nexport default Main;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './App.css';\nimport Main from './Components/MainComponent';\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <div className=\"App container-fluid\">\n                <Main />\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';  // First load bootstrap\nimport './index.css';                           // Then load custom css\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( <App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}