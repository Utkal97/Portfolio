{"version":3,"sources":["Shared/Resume.pdf","Components/ResumeComponent.js","Components/SideNavbarComponent.js","Components/HomeComponent.js","Components/ProjectsComponent.js","Components/SkillsComponent.js","Components/ProfilesComponent.js","Components/NotFoundComponent.js","Components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Resume","resume","href","target","rel","SideNavbar","props","state","isNavOpen","toggleNav","bind","this","setState","Fragment","id","Navbar","expand","NavbarToggler","onClick","src","height","width","alt","Collapse","isOpen","navbar","Nav","NavItem","to","type","class","Component","Home","style","color","marginTop","textAlign","RenderProject","project","key","name","className","tech_stack","desciption","link_to_source_code","link_to_app","Projects","project_list","projects","map","RenderRow","list","element","Button","Skills","skills","skill_list","property","push","scope","Table","borderless","profile_link","Profiles","profiles","profile_list","NotFound","console","log","Main","require","path","component","App","hashType","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c53103a6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Resume.aa04a9b2.pdf\";","import React from \"react\";\r\n\r\nfunction Resume({resume}) {\r\n    return (\r\n        <a href = {resume} target = \"_blank\" rel=\"noopener noreferrer\">Get Resume</a>\r\n    );\r\n}\r\n\r\nexport default Resume;\r\n","import React, { Component } from 'react';\r\nimport { Navbar, Nav, NavItem, NavbarToggler, Collapse } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Resume from './ResumeComponent';\r\n\r\nclass SideNavbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen : false\r\n        };\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen : !(this.state.isNavOpen)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment >\r\n                <h3 id=\"name\" > Utkal </h3>\r\n                <Navbar expand=\"md\">\r\n\r\n                    <NavbarToggler onClick={this.toggleNav} >\r\n                        <img src=\"/images/menu.svg\" height=\"30px\" width=\"40px\" alt=\"toggle menu\"/>\r\n                    </NavbarToggler>\r\n\r\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                        <Nav navbar>\r\n\r\n                            <NavItem>\r\n                                <NavLink to=\"/home\"> Home </NavLink>\r\n                            </NavItem>\r\n                            \r\n                            <NavItem>\r\n                                <NavLink to=\"/projects\"> Projects </NavLink>\r\n                            </NavItem>\r\n\r\n                            <NavItem>\r\n                                <NavLink to=\"/skills\"> Skills </NavLink>\r\n                            </NavItem>\r\n\r\n                            <NavItem>\r\n                                <NavLink to=\"/profiles\"> Profiles </NavLink>\r\n                            </NavItem>\r\n\r\n                            <button type=\"button\" class=\"btn btn-light\" id=\"get-resume-button\">\r\n                                <Resume resume={this.props.resume}/>\r\n                            </button>\r\n\r\n                        </Nav>\r\n\r\n                    </Collapse>\r\n                </Navbar>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SideNavbar;","import React from 'react';\r\nimport Jumbotron from 'reactstrap/lib/Jumbotron';\r\n\r\nfunction Home(props) {\r\n\r\n    return (\r\n        <div id=\"home\">\r\n            <h1 >Hello</h1>\r\n            <p >\r\n                I am  a computer science graduate interested in Web-Development. \r\n                I am currently exploring Reactjs (This web site is built using react).\r\n\r\n                <Jumbotron style={{color: 'black', marginTop: \"10%\", textAlign: \"left\"}}>\r\n                    <p>\r\n                        Often we face with situations where we have to deliver features in near deadlines. But do we compromise in the code quality?\r\n                    </p> <br/>\r\n                    Well, I believe we mustn't. Any feature is bound to expand in the near future. Had the code quality been compromised, \r\n                    expanding from that point might become impossible. <br />\r\n                    At the very least, we must arrive at a sweet spot in such scenarios, thinking about the future while developing the current functionality.\r\n                </Jumbotron>\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\n\r\nfunction RenderProject({project}) {\r\n    return (\r\n        <div key={project.name} className=\"card project-card col-sm-10\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{project.name}</h5>\r\n                <h6 className=\"card-subtitle\">{project.tech_stack}</h6>\r\n                <p className=\"card-text\">{project.desciption}</p>\r\n\r\n                {\r\n                    project.link_to_source_code ? \r\n                    <a href={project.link_to_source_code} className=\"card-link\" >Link to Source Code</a> : null\r\n                }\r\n                \r\n                {\r\n                    project.link_to_app ? \r\n                    <a href={project.link_to_app} className=\"card-link\" >Link to Application</a> : null\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Projects({projects}) {\r\n\r\n    const project_list = projects.map((project) => {\r\n        return (\r\n            <div key={project.name} className=\"container\">\r\n                <RenderProject project={project} />\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {project_list}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Projects;","import React from \"react\";\r\nimport { Table, Button } from 'reactstrap';\r\n\r\nfunction RenderRow({list}) {\r\n    \r\n    return list.map((element) => {\r\n        return(\r\n            <Button key={element} color=\"info ml-1\">{element}</Button>\r\n        );\r\n    });\r\n}\r\n\r\nfunction Skills({skills}) {\r\n\r\n    const skill_list = [];\r\n    for(let property in skills) {\r\n        skill_list.push(\r\n            <tr key={property}>\r\n                <th scope='row'>{property}</th>\r\n                <td>\r\n                    <RenderRow list={skills[property]} />\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Table borderless className=\"\">\r\n            <tbody>\r\n                {skill_list}\r\n            </tbody>\r\n        </Table>\r\n    );\r\n}\r\n\r\nexport default Skills;","import React from \"react\";\r\nimport { Table } from 'reactstrap';\r\n\r\n\r\nfunction RenderRow({profile_link}) {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <td> <a href={profile_link}>{profile_link}</a> </td>            \r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction Profiles({profiles}) {\r\n\r\n    const profile_list = [];\r\n    for(let property in profiles) {\r\n        profile_list.push(\r\n            <tr key={property}>\r\n                <th scope='row'>{property}</th>\r\n                <RenderRow profile_link={profiles[property]} />\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Table borderless>\r\n                <tbody>\r\n                    {profile_list}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profiles;","import React from 'react';\r\n\r\nfunction NotFound(props) {\r\n    console.log(\"Not found triggered.\");\r\n    return (\r\n        <div className=\"container\">\r\n            <img src=\"images/not_found.png\" alt=\"404 not found\" />\r\n            <p>\r\n                The page you have requested for is not present. Please go Home.\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React, {Component} from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\n\r\nimport SideNavbar from './SideNavbarComponent';\r\nimport Home from './HomeComponent';\r\nimport Projects from './ProjectsComponent';\r\nimport Skills from './SkillsComponent';\r\nimport Profiles from './ProfilesComponent';\r\nimport NotFound from './NotFoundComponent';\r\n\r\nclass Main extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            projects : require('../Shared/projects.json'),\r\n            skills : require('../Shared/skills.json'),\r\n            profiles : require('../Shared/profiles.json'),\r\n            resume : require('../Shared/Resume.pdf')\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const HomePage = () => {\r\n            return (\r\n                <Home />\r\n            );\r\n        };\r\n\r\n        return (\r\n            <div className=\"row\">\r\n\r\n                <aside className=\"sidenav\">\r\n                    <SideNavbar resume={this.state.resume} />\r\n                </aside>\r\n\r\n                <main id=\"main\" >\r\n                    <Switch >\r\n                        <Route path=\"/home\" component={HomePage} />\r\n                        <Route path=\"/projects\" component={() => <Projects projects={this.state.projects}/> } />\r\n                        <Route path=\"/skills\" component={() => <Skills skills={this.state.skills}/> } />\r\n                        <Route path=\"/profiles\" component={() => <Profiles profiles={this.state.profiles} />} />\r\n                        <Route path=\"/notfound\" component={NotFound} />\r\n                        <Redirect to=\"/home\" />\r\n                    </Switch>\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nimport './App.css';\r\nimport Main from './Components/MainComponent';\r\n\r\nfunction App() {\r\n    return (\r\n        <HashRouter hashType=\"noslash\">\r\n            <div className=\"App container-fluid\">\r\n                <Main />\r\n            </div>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';  // First load bootstrap\r\nimport './index.css';                           // Then load custom css\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render( <App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}